// <auto-generated />
using System;
using Backend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(PrayerTimesDbContext))]
    partial class PrayerTimesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PrayerTimes.DomainModel.CalendarByCity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("CalendarByCities");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Date", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DateId")
                        .HasColumnType("int");

                    b.Property<int>("GregorianId")
                        .HasColumnType("int");

                    b.Property<int>("HijriId")
                        .HasColumnType("int");

                    b.Property<string>("Readable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timestamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DateId")
                        .IsUnique();

                    b.HasIndex("GregorianId");

                    b.HasIndex("HijriId");

                    b.ToTable("Dates");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Datum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CalendarByCityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalendarByCityId");

                    b.ToTable("Datum");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Expanded")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Designation");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Gregorian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<int>("WeekdayId")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DesignationId");

                    b.HasIndex("MonthId");

                    b.HasIndex("WeekdayId");

                    b.ToTable("Gregorian");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Hijri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HijriId")
                        .HasColumnType("int");

                    b.Property<string>("Holidays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<int>("WeekdayId")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DesignationId");

                    b.HasIndex("MonthId");

                    b.HasIndex("WeekdayId");

                    b.ToTable("Hijri");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Meta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<string>("LatitudeAdjustmentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("MetaId")
                        .HasColumnType("int");

                    b.Property<int>("MethodId")
                        .HasColumnType("int");

                    b.Property<string>("MidnightMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OffsetId")
                        .HasColumnType("int");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MetaId")
                        .IsUnique();

                    b.HasIndex("MethodId");

                    b.HasIndex("OffsetId");

                    b.ToTable("Metas");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Method", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParamsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParamsId");

                    b.ToTable("Method");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Month", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("En")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Month");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Offset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Asr")
                        .HasColumnType("int");

                    b.Property<int>("Dhuhr")
                        .HasColumnType("int");

                    b.Property<int>("Fajr")
                        .HasColumnType("int");

                    b.Property<int>("Imsak")
                        .HasColumnType("int");

                    b.Property<int>("Isha")
                        .HasColumnType("int");

                    b.Property<int>("Maghrib")
                        .HasColumnType("int");

                    b.Property<int>("Midnight")
                        .HasColumnType("int");

                    b.Property<int>("OffesetId")
                        .HasColumnType("int");

                    b.Property<int>("Sunrise")
                        .HasColumnType("int");

                    b.Property<int>("Sunset")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Offset");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Params", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Fajr")
                        .HasColumnType("int");

                    b.Property<int>("Isha")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Params");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Timings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dhuhr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fajr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imsak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Maghrib")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Midnight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sunrise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sunset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimingsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TimingsId")
                        .IsUnique();

                    b.ToTable("Timings");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Weekday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("En")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Weekday");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Date", b =>
                {
                    b.HasOne("PrayerTimes.DomainModel.Datum", null)
                        .WithOne("Date")
                        .HasForeignKey("PrayerTimes.DomainModel.Date", "DateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrayerTimes.DomainModel.Gregorian", "Gregorian")
                        .WithMany()
                        .HasForeignKey("GregorianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrayerTimes.DomainModel.Hijri", "Hijri")
                        .WithMany()
                        .HasForeignKey("HijriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gregorian");

                    b.Navigation("Hijri");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Datum", b =>
                {
                    b.HasOne("PrayerTimes.DomainModel.CalendarByCity", null)
                        .WithMany("Data")
                        .HasForeignKey("CalendarByCityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Gregorian", b =>
                {
                    b.HasOne("PrayerTimes.DomainModel.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrayerTimes.DomainModel.Month", "Month")
                        .WithMany()
                        .HasForeignKey("MonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrayerTimes.DomainModel.Weekday", "Weekday")
                        .WithMany()
                        .HasForeignKey("WeekdayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Designation");

                    b.Navigation("Month");

                    b.Navigation("Weekday");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Hijri", b =>
                {
                    b.HasOne("PrayerTimes.DomainModel.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrayerTimes.DomainModel.Month", "Month")
                        .WithMany()
                        .HasForeignKey("MonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrayerTimes.DomainModel.Weekday", "Weekday")
                        .WithMany()
                        .HasForeignKey("WeekdayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Designation");

                    b.Navigation("Month");

                    b.Navigation("Weekday");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Meta", b =>
                {
                    b.HasOne("PrayerTimes.DomainModel.Datum", null)
                        .WithOne("Meta")
                        .HasForeignKey("PrayerTimes.DomainModel.Meta", "MetaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PrayerTimes.DomainModel.Method", "Method")
                        .WithMany()
                        .HasForeignKey("MethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrayerTimes.DomainModel.Offset", "Offset")
                        .WithMany()
                        .HasForeignKey("OffsetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Method");

                    b.Navigation("Offset");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Method", b =>
                {
                    b.HasOne("PrayerTimes.DomainModel.Params", "Params")
                        .WithMany()
                        .HasForeignKey("ParamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Params");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Timings", b =>
                {
                    b.HasOne("PrayerTimes.DomainModel.Datum", null)
                        .WithOne("Timings")
                        .HasForeignKey("PrayerTimes.DomainModel.Timings", "TimingsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.CalendarByCity", b =>
                {
                    b.Navigation("Data");
                });

            modelBuilder.Entity("PrayerTimes.DomainModel.Datum", b =>
                {
                    b.Navigation("Date")
                        .IsRequired();

                    b.Navigation("Meta")
                        .IsRequired();

                    b.Navigation("Timings")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
